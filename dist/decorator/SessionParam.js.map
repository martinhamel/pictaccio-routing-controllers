{"version":3,"file":"SessionParam.js","sourceRoot":"","sources":["../../src/decorator/SessionParam.ts"],"names":[],"mappings":";;AAOA,oCAcC;AApBD,oCAAkD;AAElD;;;GAGG;AACH,SAAgB,YAAY,CAAC,YAAoB,EAAE,OAAsB;IACvE,OAAO,UAAU,MAAc,EAAE,UAA2B,EAAE,KAAa;QACzE,IAAA,8BAAsB,GAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACnC,IAAI,EAAE,eAAe;YACrB,MAAM,EAAE,MAAM;YAClB,MAAM,EAAE,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,UAAU;YACvE,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,KAAK,EAAE,4DAA4D;YAC1E,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;YAC9E,cAAc,EAAE,OAAO,IAAI,OAAO,CAAC,SAAS;YAC5C,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;SAC/E,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ParamOptions } from '../decorator-options/ParamOptions';\nimport { getMetadataArgsStorage } from '../index';\n\n/**\n * Injects a Session object property to the controller action parameter.\n * Must be applied on a controller action parameter.\n */\nexport function SessionParam(propertyName: string, options?: ParamOptions): ParameterDecorator {\n  return function (object: Object, methodName: string | symbol, index: number) {\n    getMetadataArgsStorage().params.push({\n      type: 'session-param',\n      object: object,\n  method: typeof methodName === 'symbol' ? methodName.toString() : methodName,\n      index: index,\n      name: propertyName,\n      parse: false, // it makes no sense for Session object to be parsed as json\n      required: options && options.required !== undefined ? options.required : false,\n      classTransform: options && options.transform,\n      validate: options && options.validate !== undefined ? options.validate : false,\n    });\n  };\n}\n"]}